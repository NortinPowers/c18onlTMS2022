--------------------------------------------------------
-- Задачи по тренировке SQL запросов.
-- Во всех задачах ниже считайте, что таблица workers имеет поля id, login, salary, age, date, description (и другие при необходимости).
--------------------------------------------------------
drop table if exists workers;

create table workers
(
    id          serial      not null
        constraint workers_pkey
            primary key,
    login       varchar(30) not null,
    salary      numeric(30, 4),
    age         integer     not null,
    date        timestamp,
    description varchar(100)
);

alter table workers
    owner to postgres;

insert into workers (login, salary, age, date, description)
VALUES ('ivan', 300.50, 18, '1999-01-08', 'Beating Around the Bush'),
       ('admin', 200.30, 18, '2000-02-15', 'A Lot on One’s Plate'),
       ('user', 400.35, 18, '2012-12-12', 'Knock Your Socks Off'),
       ('petr', 600.75, 18, '2020-06-05', 'A Lemon'),
       ('victor', 700.89, 18, '2018-10-23', 'Tug of War'),
       ('eugene', 300.50, 21, '2017-12-30', 'Fool''s Gold'),
       ('aleksandr', 200.30, 23, '2013-11-23', 'Talk the Talk'),
       ('fil', 400.35, 27, now(), 'Ride Him, Cowboy!'),
       ('tom', 600.75, 36, '1998-10-24', 'Ring Any Bells?'),
       ('bob', 700.89, 50, '1986-03-18', 'There''s No I in Team');
--------------------------------------------------------
-- Выберите из таблицы workers записи с id равным 1, 2, 3, 5, 14.
--------------------------------------------------------
select *
from workers
where id in (1, 2, 3, 5, 14);
--------------------------------------------------------
-- Выберите из таблицы workers записи с login равным 'eee', 'bbb', 'zzz'.
--------------------------------------------------------
select *
from workers
where login in ('eee', 'bbb', 'zzz');
--------------------------------------------------------
-- Выберите из таблицы workers записи с id равным 1, 2, 3, 7, 9, и логином, равным 'user', 'admin', 'ivan' и зарплатой больше 300.
--------------------------------------------------------
select *
from workers
where id in (1, 2, 3, 7, 9)
  and login in ('user', 'admin', 'ivan', 'Worker1')
  and salary > 300;
--------------------------------------------------------
-- Выберите из таблицы workers записи c зарплатой от 100 до 1000.
--------------------------------------------------------
select *
from workers
where salary between 100 and 1000;
--------------------------------------------------------
-- Выберите из таблицы workers записи c id от 3 до 10 и зарплатой от 300 до 500.
--------------------------------------------------------
select *
from workers
where salary between 300 and 500
  and id between 3 and 10;
--------------------------------------------------------
-- Выберите из таблицы workers все записи так, чтобы вместо id было userId, вместо login – userLogin, вместо salary - userSalary.
--------------------------------------------------------
select id as userId, login as userLogin, salary as userSalary
from workers;
--------------------------------------------------------
-- Выберите из таблицы workers все записи так, чтобы туда попали только записи с разной зарплатой (без дублей).
--------------------------------------------------------
select distinct salary
from workers;
--------------------------------------------------------
-- Получите SQL запросом все возрасты без дублирования.
--------------------------------------------------------
select distinct age
from workers;
--------------------------------------------------------
-- Найдите в таблице workers минимальную зарплату.
--------------------------------------------------------
select min(salary)
from workers;
--------------------------------------------------------
-- Найдите в таблице workers максимальную зарплату.
--------------------------------------------------------
select max(salary)
from workers;
--------------------------------------------------------
-- Найдите в таблице workers суммарную зарплату.
--------------------------------------------------------
select sum(salary)
from workers;
--------------------------------------------------------
-- Найдите в таблице workers суммарную зарплату для людей в возрасте от 21 до 25.
--------------------------------------------------------
select sum(salary)
from workers
where age between 21 and 25;
--------------------------------------------------------
-- Найдите в таблице workers суммарную зарплату для id, равного 1, 2, 3 и 5.
--------------------------------------------------------
select sum(salary)
from workers
where id in (1, 2, 3, 5);
--------------------------------------------------------
-- Найдите в таблице workers среднюю зарплату.
--------------------------------------------------------
select avg(salary)
from workers;
--------------------------------------------------------
-- Найдите в таблице workers средний возраст.
--------------------------------------------------------
select avg(age)
from workers;
--------------------------------------------------------
-- Выберите из таблицы workers все записи, у которых дата больше текущей.
--------------------------------------------------------
select *
from workers
where date > now();
--------------------------------------------------------
-- Вставьте в таблицу workers запись с полем date с текущим моментом времени в формате 'год-месяц-день часы:минуты:секунды'.
--------------------------------------------------------
insert into workers (login, salary, age, date, description)
VALUES ('jerry', 300.50, 18, current_timestamp, 'Swinging For the Fences');
--------------------------------------------------------
-- Вставьте в таблицу workers запись с полем date с текущей датой в формате 'год-месяц-день'.
--------------------------------------------------------
insert into workers (login, salary, age, date, description)
VALUES ('Kate', 350.50, 28, current_date, 'Fish Out Of Water');
--------------------------------------------------------
-- Вставьте в таблицу workers запись с полем time с текущим моментом времени в формате 'часы:минуты:секунды'.
--------------------------------------------------------
insert into workers (login, salary, age, date, description)
VALUES ('Anna', 350.50, 28, clock_timestamp(), 'Top Drawer');

--!!! WORKS RANDOMLY !!!
-- need your comment (работает только на одном из двух компьютеров): VALUES ('Anna', 350.50, 28, current_time, 'Top Drawer');

--------------------------------------------------------
-- Выберите из таблицы workers все записи за 2016 год.
--------------------------------------------------------
select *
from workers
where extract(year from date) = 2016;
--------------------------------------------------------
-- Выберите из таблицы workers все записи за март любого года.
--------------------------------------------------------
select *
from workers
where extract(month from date) = 3;
--------------------------------------------------------
-- Выберите из таблицы workers все записи за третий день месяца.
--------------------------------------------------------
select *
from workers
where extract(day from date) = 3;
--------------------------------------------------------
-- Выберите из таблицы workers все записи за пятый день апреля любого года.
--------------------------------------------------------
select *
from workers
where extract(day from date) = 5
  and extract(month from date) = 4;
--------------------------------------------------------
-- Выберите из таблицы workers все записи за следующие дни любого месяца: 1, 7, 11, 12, 15, 19, 21, 29.
--------------------------------------------------------
select *
from workers
where extract(day from date) in (1, 7, 11, 12, 15, 19, 21, 29);
--------------------------------------------------------
-- Выберите из таблицы workers все записи за вторник.
--------------------------------------------------------
select *
from workers
where extract(dow from date) = 2;
--------------------------------------------------------
-- Выберите из таблицы workers все записи за первую декаду любого месяца 2016 года.
--------------------------------------------------------
select *
from workers
where extract(day from date) between 1 and 10
  and extract(year from date) = 2016;
--------------------------------------------------------
-- Выберите из таблицы workers все записи, в которых день меньше месяца.
--------------------------------------------------------
select *
from workers
where extract(day from date) < extract(month from date);
--------------------------------------------------------
-- При выборке из таблицы workers запишите день, месяц и год в отдельные поля.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       extract(day from date)   as day,
       extract(month from date) as month,
       extract(year from date)  as year
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле today, в котором будет номер текущего дня недели.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       extract(dow from date) as dayOfWeek
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers запишите день, месяц и год в отдельное поле с помощью DATE в формате 'год-месяц-день'.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       to_char(date, 'YYYY month DD') as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers выведите дату в формате '31.12.2025'.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       to_char(date, 'DD.MM.YYYY') as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers выведите дату в формате '2025% 31.12'.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       to_char(date, 'YYYY% DD.MM') as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers прибавьте к дате 1 день.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       date + interval '1 day' as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers отнимите от даты 1 день.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       date - interval '1 day' as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers прибавьте к дате 1 день, 2 часа.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       date + interval '1 day 2 hour' as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers прибавьте к дате 1 год, 2 месяца.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       date + interval '1 year 2 month' as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers прибавьте к дате 1 день, 2 часа, 3 минуты.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       date + interval '1 day 2 hour 3 min' as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers прибавьте к дате 1 день, 2 часа, 3 минуты, 5 секунд.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       date + interval '1 day 2 hour 3 min 5 sec' as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers прибавьте к дате 2 часа, 3 минуты, 5 секунд.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       date + interval '2 hour 3 min 5 sec' as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers прибавьте к дате 1 день и отнимите 2 часа.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       date + interval '1 day' - interval '2 hour' as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers прибавьте к дате 1 день и отнимите 2 часа, 3 минуты.
--------------------------------------------------------
select id,
       login,
       salary,
       age,
       date + interval '1 day' - interval '2 hour 3 min' as date
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле res, в котором будет число 3.
--------------------------------------------------------
select *, 3 as res
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле res, в котором будет строка 'eee'.
--------------------------------------------------------
select *, 'eee' as res
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле 3, в котором будет число 3.
--------------------------------------------------------
select *, 3 as "3"
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле res, в котором будет лежать сумма зарплаты и возраста.
--------------------------------------------------------
select *, (salary + age) as res
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле res, в котором будет лежать разность зарплаты и возраста.
--------------------------------------------------------
select *, (salary - age) as res
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле res, в котором будет лежать произведение зарплаты и возраста
--------------------------------------------------------
select *, (salary * age) as res
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле res, в котором будет лежать среднее арифметическое зарплаты и возраста.
--------------------------------------------------------
select *, (salary + age) / 2 as res
from workers;
--------------------------------------------------------
-- Выберите из таблицы workers все записи, в которых сумма дня и месяца меньше 10-ти.
--------------------------------------------------------
select *
from workers
where extract(day from date) + extract(month from date) < 10;
--------------------------------------------------------
-- При выборке из таблицы workers получите первые 5 символов поля description.
--------------------------------------------------------
select id, login, salary, age, date, left(description, 5) as "some"
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers получите последние 5 символов поля description.
--------------------------------------------------------
select id, login, salary, age, date, right(description, 5) as "some"
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers получите из поля description символы со второго по десятый.
--------------------------------------------------------
select id, login, salary, age, date, substr(description, 2, 10) as "some"
from workers;
--------------------------------------------------------
-- Даны две таблицы: таблица category и таблица sub_category с полями id и name.
--------------------------------------------------------
drop table if exists category;
drop table if exists sub_category;
create table category
(
    id   serial      not null
        primary key,
    name varchar(30) not null
);
create table sub_category
(
    id   serial      not null
        primary key,
    name varchar(30) not null
);
insert into category (name)
values ('technical goods'),
       ('household appliances'),
       ('cars'),
       ('cottage goods');
insert into sub_category (name)
values ('everyday goods'),
       ('durable goods'),
       ('pre-selection products'),
       ('impulse purchase products'),
       ('emergency supplies');
--------------------------------------------------------
-- Достаньте одним запросом названия категорий и подкатегорий.
--------------------------------------------------------
select name
from category
union
select name
from sub_category;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле res, в котором будут лежать одновременно зарплата и возраст (слитно).
--------------------------------------------------------
select *, concat(salary, age) as res
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле res, в котором будут лежать одновременно зарплата и возраст (слитно), а после возраста будут идти три знака '!'.
--------------------------------------------------------
select *, concat(salary, age, '!!!') as res
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле res, в котором будут лежать одновременно зарплата и возраст через дефис.
--------------------------------------------------------
select *, concat(salary, ' - ', age) as res
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers получите первые 5 символов логина и добавьте троеточие.
--------------------------------------------------------
select id, concat(left(login, 5), '...'), salary, age, date, description
from workers;
--------------------------------------------------------
-- Найдите самые маленькие зарплаты по группам возрастов (для каждого возраста свою минимальную зарплату).
--------------------------------------------------------
select age, min(salary) as minSalary
from workers
group by age;
--------------------------------------------------------
-- Найдите самый большой возраст по группам зарплат (для каждой зарплаты свой максимальный возраст).
--------------------------------------------------------
select salary, max(age) as maxAge
from workers
group by salary;
--------------------------------------------------------
-- Выберите из таблицы workers уникальные возраста так, чтобы для каждого возраста было поле res, в котором будут лежать через дефис id записей с таким возрастом.
--------------------------------------------------------
select age, string_agg(concat(id, 'id'), '-') as res
from workers
group by age;
--------------------------------------------------------
-- Выберите из таблицы workers все записи, зарплата в которых больше средней зарплаты.
--------------------------------------------------------
select *
from workers
where salary > (select avg(salary) from workers);
--------------------------------------------------------
-- Выберите из таблицы workers все записи, возраст в которых меньше среднего возраста, деленного на 2 и умноженного на 3.
--------------------------------------------------------
select *
from workers
where age < (select (avg(age) / 2) * 3 from workers);
--------------------------------------------------------
-- Выберите из таблицы workers записи с минимальной зарплатой.
--------------------------------------------------------
select *
from workers
where salary = (select min(salary) from workers);
--------------------------------------------------------
-- Выберите из таблицы workers записи с максимальной зарплатой.
--------------------------------------------------------
select *
from workers
where salary = (select max(salary) from workers);
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле max, в котором будет лежать максимальное значение зарплаты для возраста 25 лет.
--------------------------------------------------------
select *, (select max(salary) from workers where age = 25) as max
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле avg, в котором будет лежать деленная на 2 разница между максимальным значением возраста и минимальным значением возраста в во всей таблице.
--------------------------------------------------------
select *, (select (max(age) - min(age)) / 2 from workers) as avg
from workers;
--------------------------------------------------------
-- При выборке из таблицы workers создайте новое поле avg, в котором будет лежать деленная на 2 разница между максимальным значением зарплаты и минимальным значением зарплаты для возраста 25 лет.
--------------------------------------------------------
select *, (select (max(salary) - min(salary)) / 2 from workers where age = 25) as avg
from workers;
--------------------------------------------------------
-- Даны две таблицы: таблица category с полями id и name и таблица page с полями id, name и category_id.
--------------------------------------------------------
drop table if exists page;
create table page
(
    id          serial      not null
        constraint page_pk
            primary key,
    name        varchar(60) not null,
    category_id integer     not null
        constraint page_category_id_fk
            references category
            on update cascade on delete cascade
);
alter table page
    owner to postgres;
insert into page (name, category_id)
VALUES ('tv', 1),
       ('mobile phone', 1),
       ('sofa', 2),
       ('razor', 4),
       ('jeep', 3);
--------------------------------------------------------
-- Достаньте одним запросом все страницы вместе с их категориями.
--------------------------------------------------------
select p.id, p.name, p.category_id, c.name
from page p
         left join category c on p.category_id = c.id;
--------------------------------------------------------
-- Даны 3 таблицы: таблица category с полями id и name, таблица sub_category с полями id и name и таблица page с полями id, name и sub_category_id.
--------------------------------------------------------
drop table if exists page;
create table page
(
    id              serial      not null
        constraint page_pk
            primary key,
    name            varchar(60) not null,
    sub_category_id integer     not null
        constraint page_sub_category_id_fk
            references sub_category
            on update cascade on delete cascade
);
alter table page
    owner to postgres;
insert into page (name, sub_category_id)
VALUES ('tv', 1),
       ('mobile phone', 1),
       ('sofa', 2),
       ('razor', 4),
       ('jeep', 3);
--------------------------------------------------------
-- Достаньте одним запросом все страницы вместе с их подкатегориями и категориями.
--------------------------------------------------------
select p.id, p.name, p.sub_category_id, s.name, c.name
from page p
         left join sub_category s on p.sub_category_id = s.id
         join category c on c.id = s.id;
--------------------------------------------------------
-- Создайте базы данных test1 и test2.
--------------------------------------------------------
drop schema if exists test1;
drop schema if exists test2;
create schema test1;
create schema test2;
--------------------------------------------------------
-- Удалите базу данных test2.
--------------------------------------------------------
drop schema test2;
--------------------------------------------------------
-- Создайте в базе данных test1 таблицы table1 и table2 с полями id, login, salary, age, date.
--------------------------------------------------------
drop table if exists test1.test1;
drop table if exists test1.test2;
create table test1.test1
(
    id     serial      not null primary key,
    login  varchar(30) not null,
    salary numeric     not null,
    age    int,
    date   timestamp
);
create table test1.test2
(
    id     serial      not null primary key,
    login  varchar(30) not null,
    salary numeric     not null,
    age    int,
    date   timestamp
);
--------------------------------------------------------
-- Переименуйте таблицу table2 в table3.
--------------------------------------------------------
alter table test1.test2
    rename to test3;
--------------------------------------------------------
-- Удалите таблицу table3.
--------------------------------------------------------
drop table test1.test3;
--------------------------------------------------------
-- Добавьте в таблицу table1 поле status.
--------------------------------------------------------
alter table test1.test1
    add column status boolean;
--------------------------------------------------------
-- Удалите из таблицы table1 поле age.
--------------------------------------------------------
alter table test1.test1
    drop column age;
--------------------------------------------------------
-- Переименуйте поле login на user_login.
--------------------------------------------------------
alter table test1.test1
    rename column login to user_login;
--------------------------------------------------------
-- Смените типа поля salary с int на varchar(255).
--------------------------------------------------------
alter table test1.test1
    alter column salary type varchar(255);
--------------------------------------------------------
-- Очистите таблицу table1.
--------------------------------------------------------
truncate test1.test1;
--------------------------------------------------------
-- Очистите все таблицы базы данных test1.
--------------------------------------------------------
truncate table test1.test1;